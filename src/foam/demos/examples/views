## Views
--

## String
--
foam.CLASS({
  name: 'Example',
  properties: [
    {
      class: 'String',
      name: 'default'
    },
    {
      class: 'String',
      name: 'featured',
      required: true,
      placeholder: 'placeholder',
      help: 'Help text.'
    },
    {
      class: 'String',
      name: 'stringWithDisplayWidth',
      displayWidth: 4
    },
    {
      class: 'String',
      name: 'stringWithTextFieldWithSize',
      displayWidth: 4,
      view: {
        class: 'foam.u2.TextField',
        maxLength: 4
      }
    },
    {
      class: 'String',
      name: 'stringWithTextArea',
      view: {
        class: 'foam.u2.tag.TextArea',
        rows: 8, cols: 80,
      }
    },
  ]
});

add(foam.u2.DetailView.create({data: Example.create()}));

## String with Choices
--
foam.CLASS({
  name: 'Example',
  properties: [
    {
      class: 'String',
      name: 'radioView',
      view: {
        class: 'foam.u2.view.RadioView',
        choices: ['Yes', 'No', 'Maybe']
      }
    },
    {
      class: 'String',
      name: 'radioViewHorizontal',
      value: 'Yes',
      view: {
        class: 'foam.u2.view.RadioView',
        choices: ['Yes', 'No', 'Maybe'],
        isHorizontal: true
      }
    },
    {
      class: 'String',
      name: 'textField',
      value: 'Yes',
      view: {
        class: 'foam.u2.TextField',
        choices: ['Yes', 'No', 'Maybe']
      }
    },
    {
      class: 'String',
      name: 'choiceView',
      view: {
        class: 'foam.u2.view.ChoiceView',
        choices: ['Yes', 'No', 'Maybe']
      }
    },
    {
      class: 'String',
      name: 'choiceViewWithSize',
      view: {
        class: 'foam.u2.view.ChoiceView',
        size: 3,
        choices: ['Yes', 'No', 'Maybe']
      }
    },
    {
      class: 'String',
      name: 'choiceViewWithPlaceholder',
      value: 'Yes',
      view: {
        class: 'foam.u2.view.ChoiceView',
        placeholder: 'placeholder',
        choices: ['Yes', 'No', 'Maybe']
      }
    },
    {
      class: 'String',
      name: 'choiceViewWithMultipleViews',
      value: 'Yes',
      view: {
        class: 'foam.u2.MultiView',
        views: [
          {
            class: 'foam.u2.view.ChoiceView',
            size: 10,
            choices: ['Yes', 'No', 'Maybe']
          },
          {
            class: 'foam.u2.view.ChoiceView',
            size: 3,
            choices: ['Yes', 'No', 'Maybe']
          },
          {
            class: 'foam.u2.view.ChoiceView',
            placeholder: 'placeholder',
            choices: ['Yes', 'No', 'Maybe']
          },
          'foam.u2.TextField'
        ]
      }
    },
    {
      class: 'String',
      name: 'choiceViewWithValues',
      view: {
        class: 'foam.u2.view.ChoiceView',
        choices: [ [1, 'Yes'], [0, 'No'], [0.5, 'Maybe']]
      }
    },
  ]
});

var t = Example.create();
add(foam.u2.detail.SectionedDetailView.create({data: t}));
// add(foam.u2.DetailView.create({data: t}));

## Boolean
--
foam.CLASS({
  name: 'Example',
  properties: [
    {
      class: 'Boolean',
      name: 'default'
    },
    {
      class: 'Boolean',
      name: 'booleanWithRadio',
      view: function(_, X) {
        return {
          class: 'foam.u2.view.RadioView',
          choices: [
            [true, 'Yes'],
            [false, 'No']
          ],
          isHorizontal: true
        };
      }
    }
  ]
});

add(foam.u2.CheckBox.create());
var t = Example.create();
add(foam.u2.detail.SectionedDetailView.create({data: t}));
// add(foam.u2.DetailView.create({data: t}));


## Numbers
--
foam.CLASS({
  name: 'Example',
  properties: [
    {
      class: 'Int',
      name: 'default'
    },
    {
      class: 'Int',
      name: 'help',
      help: 'Help text.'
    },
    {
      class: 'Int',
      name: 'tooltip',
      view: { class: 'foam.u2.view.IntView', tooltip: 'Please enter a number.' }
    },
    {
      class: 'Int',
      name: 'intWithIntView',
      view: {
        class: 'foam.u2.view.IntView',
        onKey: true,
        displayWidth: 50
      }
    },
    {
      class: 'Int',
      name: 'intWithMinAndMax',
      min: 1,
      max: 5,
      value: 3,
      units: 'rating (1-5)'
    },
    {
      class: 'Int',
      name: 'intWithRangeView',
      view: {
        class: 'foam.u2.RangeView'
      }
    },
    /*
    {
      class: 'Int',
      name: 'intWithTemperatureView',
      view: {
        class: 'foam.nanos.pm.TemperatureCView'
      }
    },
    */
    {
      class: 'Int',
      name: 'intWithProgressView',
      view: {
        class: 'foam.u2.ProgressView'
      },
      value: 42
    },
    {
      class: 'Int',
      name: 'intWithMultiView',
      view: {
        class: 'foam.u2.MultiView',
        views: [ 'foam.u2.RangeView', 'foam.u2.IntView' ]
      }
    },
    {
      class: 'Int',
      name: 'intWithMultiViewVertical',
      view: {
        class: 'foam.u2.MultiView',
        horizontal: false,
        views: [ 'foam.u2.RangeView', { class: 'foam.u2.view.IntView', onKey: true } ]
      }
    },
    /*
    {
      class: 'Int',
      name: 'intWithDualView2',
      view: {
        class: 'foam.u2.view.DualView',
        viewa: 'foam.u2.RangeView',
        viewb: 'foam.u2.ProgressView'
      }
    },
    */
    {
      class: 'Byte',
      name: 'defaultByte'
    },
    {
      class: 'Short',
      name: 'defaultShort'
    },
    {
      class: 'Long',
      name: 'defaultLong'
    },
    {
      class: 'Float',
      name: 'defaultFloat'
    },
    {
      class: 'Float',
      name: 'floatWithPrecision',
      precision: 2,
      value: 3.1415926
    },
    {
      class: 'Double',
      name: 'defaultDouble'
    },
    {
      class: 'Float',
      name: 'multiViewFloat',
      view: {
        class: 'foam.u2.MultiView',
        views: [
          { class: 'foam.u2.TextField', placeholder: 'textfield', onKey: true },
          { class: 'foam.u2.FloatView', placeholder: 'floatview', onKey: true },
          { class: 'foam.u2.TextField', onKey: false },
          { class: 'foam.u2.FloatView', onKey: false },
          { class: 'foam.u2.FloatView', onKey: false, precision: 2 },
          { class: 'foam.u2.FloatView', onKey: false, precision: 2, trimZeros: false }
        ]
      }
    }
  ]
});

add(foam.u2.DetailView.create({data: Example.create()}));

## Dates and Times
--
foam.CLASS({
  name: 'Example',
  properties: [
    {
      class: 'Date',
      name: 'defaultDate',
    },
    {
      class: 'Date',
      name: 'dateRWAndRO',
      factory: function() { return new Date(); },
      view: {
        class: 'foam.u2.MultiView',
        views: [
          { class: 'foam.u2.view.DateView', onKey: false },
          { class: 'foam.u2.view.DateView', onKey: false },
          { class: 'foam.u2.view.DateView', mode: foam.u2.DisplayMode.RO }
        ]
      }
    },
    {
      class: 'Date',
      name: 'dateRWAndROOnKey',
      factory: function() { return new Date(); },
      view: {
        class: 'foam.u2.MultiView',
        views: [
          { class: 'foam.u2.view.DateView', onKey: true },
          { class: 'foam.u2.view.DateView', onKey: true },
          { class: 'foam.u2.view.DateView', mode: foam.u2.DisplayMode.RO }
        ]
      }
    },
    {
      class: 'DateTime',
      name: 'defaultDateTime',
    },
    {
      class: 'DateTime',
      name: 'defaultDateTime2',
      view: {
        class: 'foam.u2.MultiView',
        views: [
          { class: 'foam.u2.view.DateTimeView', onKey: true },
          { class: 'foam.u2.view.DateTimeView', onKey: true },
          { class: 'foam.u2.view.DateView', onKey: true }
        ]
      }
    },
    {
      class: 'Time',
      name: 'defaultTime'
    },
  ]
});

var data = Example.create();
add(foam.u2.DetailView.create({data: data}));
add(data.defaultDateTime$);


## Colours
--
foam.CLASS({
  name: 'Example',
  properties: [
    {
      class: 'Color',
      name: 'defaultColor'
    },
    {
      class: 'Color',
      name: 'readOnlyColor',
      value: 'orange',
      view: 'foam.u2.view.ReadColorView'
    },
    {
      class: 'Color',
      name: 'multiView',
      value: 'orange',
      view: {
        class: 'foam.u2.MultiView',
        views: [
          'foam.u2.view.ColorEditView',
          'foam.u2.view.ReadColorView'
        ]
      }
    }
  ]
});

var data = Example.create();
add(foam.u2.DetailView.create({data: data}));


## Passwords
--
foam.CLASS({
  name: 'Example',
  properties: [
    {
      class: 'Password',
      name: 'defaultPassword',
      value: 'secret'
    }
  ]
});

var data = Example.create();
add(foam.u2.DetailView.create({data: data}));


## Images
--
foam.CLASS({
  name: 'Example',
  properties: [
    {
      class: 'Image',
      name: 'defaultImage',
      value: '../u2/Dragon.png'
    },
    /*
    Only works with NANOS
    {
      class: 'Image',
      name: 'imageView',
      view: 'foam.u2.view.ImageView',
      value: '../u2/Dragon.png'
    },
    {
      class: 'Image',
      name: 'dualImageView',
      view: {
        class: 'foam.u2.MultiView',
        views: [
          'foam.u2.TextField',
          'foam.u2.view.ImageView'
        ]
      },
      value: '../u2/Dragon.png'
    }
    */
  ]
});

var data = Example.create();
add(foam.u2.DetailView.create({data: data}));


## Arrays
--
foam.CLASS({
  package: 'foam.demos.u2',
  name: 'SampleData',
  properties: [
    {
      class: 'String',
      name: 'id'
    },
    'name',
    'value'
  ],
  methods: [
    function toSummary() { return this.id + ' ' + this.value; }
  ]
});

foam.CLASS({
  name: 'Example',
  properties: [
    {
      class: 'StringArray',
      name: 'defaultStringArray'
    },
    {
      class: 'StringArray',
      name: 'stringArrayRowView',
      view: 'foam.u2.view.StringArrayRowView',
      factory: function() { return ['row1', 'row2', 'row3']; }
    },
    {
      class: 'FObjectArray',
      name: 'FObjectArrayMultiView',
      of: 'foam.demos.u2.SampleData',
      view: { class: 'foam.u2.MultiView',
        views: [
          { class: 'foam.u2.view.TitledArrayView'  },
          { class: 'foam.u2.view.FObjectArrayView' }
        ]
      }
    }
  ]
});

var data = Example.create();
add(foam.u2.DetailView.create({data: data}));

## Enums
--
foam.CLASS({
  name: 'Example',
  properties: [
    {
      class: 'Enum',
      of: 'foam.u2.layout.DisplayWidth',
      name: 'displayWidth'
    }
  ]
});

var data = Example.create();
add(foam.u2.DetailView.create({data: data}));
